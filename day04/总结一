关于自增自减(即++i，i++)

要想给一个数加一或减一我们可以：

i += 1;

j -= 1;

而C语言还允许用++和--运算符，其实这里有误导，因为++和--可以作为前缀和后缀，这样的话他们就有可能改变操作数的值，下面让我们来看看：

i = 1;

printf("i is %d\n",++i); /* prints i is 2 */

printf("i is %d\n",i); /* prints i is 2 */

计算表达式i++的结果是i，但是会引发i随后进行自增：

i = 1;

printf("i is %d\n",i++); /* prints i is 1/ */

printf("i is %d\n",i); /* prints i is 2 */

第一个printf 显示了i自增前的原始值，第二个printf显示了i变化后的新值；当然 -- 类似就不举例了~

但在同一个表达式中多次使用++和--往往很难理解，我们看看下面的例子：

i = 1;

j = 2;

k = ++i + j++;

i,j,k最终值分别是2,3,4而++i是2 j++是2;

总结：不管是++i还是i++执行这条语句后i的值都加一了只是(++i)的值加一了而(i++)没变。
